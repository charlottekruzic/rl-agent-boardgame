import sys
from pathlib import Path

project_root = Path(__file__).resolve().parent.parent
sys.path.append(str(project_root))
from ludo_env import *

# initie un game logic
game = GameLogic()
game.init_board()
game.get_str_game_overview()
print()
print("joueur 0 fait un 6 et sort un pion")
game.move_pawn(0, 0, 6, Action.MOVE_OUT)
game.get_str_game_overview()
print()
print("joueur 1 fait un 6 et sort un pion")
game.move_pawn(1, 0, 6, Action.MOVE_OUT)
game.get_str_game_overview()
print()
print("avance de 30 cases pion 0 pour voir où il se situe")
game.move_pawn(0, 1, 30, Action.MOVE_FORWARD)
game.get_str_game_overview()
print()
print("avance de 30 cases pion 1 pour voir où il se situe")
game.move_pawn(1, 1, 30, Action.MOVE_FORWARD)
game.get_str_game_overview()
print()
print("finir le tour de joueur 0")
game.move_pawn(0, 31, 25, Action.MOVE_FORWARD)
game.get_str_game_overview()
print()
game.move_pawn(1, 31, 25, Action.MOVE_FORWARD)
game.get_str_game_overview()
print()
print("les joueurs entrent en safe zone")
game.move_pawn(0, 56, 1, Action.ENTER_SAFEZONE)
game.move_pawn(1, 56, 1, Action.ENTER_SAFEZONE)
game.get_str_game_overview()
print("faire goal pour joueur 0")
game.move_pawn(0, 57, 6, Action.REACH_GOAL)
game.get_str_game_overview()
print()
print(game.get_valid_actions(0, 6))  # == [Action.MOVE_OUT])
print()
print(game.encode_valid_actions(game.get_valid_actions(0, 6)))  #
print()
print(game.get_valid_actions(0, 3))  # == [Action.NO_ACTION])
print()
print(game.encode_valid_actions(game.get_valid_actions(0, 3)))  #
